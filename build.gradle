plugins {
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'com.bmuschko.docker-spring-boot-application' version '9.4.0'
    id 'java'
}

group = 'uk.co.boots'
def version_number = '0.0.1'
def version = "${version_number}-SNAPSHOT"
def image_name = 'cpas-stub-test'
def image_repository = 'davisruk'
def full_image_details = "${image_repository}/${image_name}:${version}"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

docker {
	springBootApplication {
        baseImage = 'openjdk:17-jdk-alpine'
        ports = [8080]
        //images = ['davisruk/cpas-stub-test:0.0.1-SNAPSHOT']
        images = ["${full_image_details}"]
        jvmArgs = ['-Xmx512m']
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'com.boots.gs1:GS1Interfacing:0.0.4-SNAPSHOT'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.postgresql:postgresql'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}
